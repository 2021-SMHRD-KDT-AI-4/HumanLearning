--DROP TABLE 문 모음
DROP TABLE MEMBERSHIPS CASCADE CONSTRAINT;
DROP TABLE USERS CASCADE CONSTRAINT;
DROP TABLE NOTE_CATEGORIES CASCADE CONSTRAINT;
DROP TABLE VIDEOS CASCADE CONSTRAINT;
DROP TABLE BOARDS CASCADE CONSTRAINT;
DROP TABLE KEYWORDS CASCADE CONSTRAINT;
DROP TABLE VIDEO_ANALYSES CASCADE CONSTRAINT;
DROP TABLE CALENDARS CASCADE CONSTRAINT;

--CREATE TABLE 문 모음
CREATE TABLE MEMBERSHIPS
(
    MEMBERSHIP_ID      VARCHAR2(100)    NOT NULL, 
    USER_ID            VARCHAR2(100)    NULL, 
    MEMBERSHIP_NAME    VARCHAR2(100)    NULL
);

CREATE TABLE USERS
(
    USER_ID          VARCHAR2(100)    NOT NULL, 
    MEMBERSHIP_NAME    VARCHAR2(20)   DEFAULT 'Basic', 
    USER_NAME        VARCHAR2(100)    NOT NULL, 
    USER_PW          VARCHAR2(100)    NOT NULL, 
    USER_AGE         VARCHAR2(20)     NOT NULL, 
    USER_GENDER      VARCHAR2(20)     NOT NULL
);


CREATE TABLE NOTE_CATEGORIES
(
    NOTE_ID      NUMBER           NOT NULL, 
    USER_ID      VARCHAR2(100)    NOT NULL, 
    NOTE_NAME    VARCHAR2(300)    NULL
);


CREATE TABLE VIDEOS
(
    VIDEO_ID          NUMBER            NOT NULL, 
    USER_ID           VARCHAR2(100)     NOT NULL, 
    NOTE_ID           NUMBER            NOT NULL, 
    VIDEO_FILENAME    VARCHAR2(300)     NULL, 
    PLAY_TIME         NUMBER            NOT NULL, 
    UPLOAD_TIME       DATE              NOT NULL, 
    VIDEO_MEMO        VARCHAR2(3000)    NULL
);


CREATE TABLE BOARDS
(
    ARTICLE_ID         NUMBER            NOT NULL, 
    USER_ID            VARCHAR2(100)     NOT NULL, 
    POST_TIME          DATE              NULL, 
    ARTICLE_TITLE      VARCHAR2(300)     NULL, 
    ARTICLE_CONTENT    VARCHAR2(3000)    NULL, 
    IMG_PATH           VARCHAR2(300)     NULL, 
    LIKE_NUM           NUMBER            NULL
);

CREATE TABLE KEYWORDS
(
    KEYWORD_ID    NUMBER           NOT NULL, 
    USER_ID       VARCHAR2(100)    NOT NULL, 
    VIDEO_ID      NUMBER           NOT NULL, 
    KEYWORD       VARCHAR2(100)    NULL, 
    COUNT         NUMBER           NULL
);

CREATE TABLE VIDEO_ANALYSES
(
    ANALYSIS_ID      NUMBER            NOT NULL, 
    USER_ID          VARCHAR2(100)     NOT NULL, 
    VIDEO_ID         NUMBER            NOT NULL, 
    START_TIME       NUMBER            NULL, 
    EMD_TIME         NUMBER            NULL, 
    TRANS_CONTENT    VARCHAR2(3000)    NULL, 
    BOOKMARK         VARCHAR2(1)       NULL
);

CREATE TABLE CALENDARS
(
    CAL_ID         NUMBER            NOT NULL, 
    USER_ID        VARCHAR2(100)     NOT NULL, 
    CAL_DATE       DATE              NULL, 
    CAL_COMMENT    VARCHAR2(3000)    NULL
);

--PK설정
ALTER TABLE MEMBERSHIPS ADD CONSTRAINT PK_MEMBERSHIPS PRIMARY KEY (MEMBERSHIP_ID);
ALTER TABLE USERS ADD CONSTRAINT PK_USERS PRIMARY KEY (USER_ID);
ALTER TABLE NOTE_CATEGORIES ADD CONSTRAINT PK_NOTE_CATEGORIES PRIMARY KEY (NOTE_ID);
ALTER TABLE VIDEOS ADD CONSTRAINT PK_VIDEOS PRIMARY KEY (VIDEO_ID);
ALTER TABLE BOARDS ADD CONSTRAINT PK_BOARDS PRIMARY KEY (ARTICLE_ID);
ALTER TABLE KEYWORDS ADD CONSTRAINT PK_KEYWORDS PRIMARY KEY (KEYWORD_ID);
ALTER TABLE VIDEO_ANALYSES ADD CONSTRAINT PK_VIDEO_ANALYSES PRIMARY KEY (ANALYSIS_ID);
ALTER TABLE CALENDARS ADD CONSTRAINT PK_CALENDARS PRIMARY KEY (CAL_ID);

--여기서 부턴 실행X
--SEQUENCE 삭제
DROP SEQUENCE NOTE_CATEGORIES_SEQ;
DROP SEQUENCE VIDEOS_SEQ;
DROP SEQUENCE BOARDS_SEQ;
DROP SEQUENCE KEYWORDS_SEQ;
DROP SEQUENCE VIDEO_ANALYSES_SEQ;
DROP SEQUENCE CALENDARS_SEQ;


--SEQUENCE 생성
CREATE SEQUENCE NOTE_CATEGORIES_SEQ START WITH 1INCREMENT BY 1;
CREATE SEQUENCE VIDEOS_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE BOARDS_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE KEYWORDS_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE VIDEO_ANALYSES_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE CALENDARS_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE NOTE_ID_SEQ START WITH 1 INCREMENT BY 1;

--FK 설정 
ALTER TABLE USERS ADD CONSTRAINT FK_USERS_MEMBERSHIP_NAME_MEMBERS FOREIGN KEY (MEMBERSHIP_NAME) REFERENCES MEMBERSHIPS (MEMBERSHIP_NAME);
ALTER TABLE NOTE_CATEGORIES ADD CONSTRAINT FK_NOTE_CATEGORIES_USER_ID_USE FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE VIDEOS ADD CONSTRAINT FK_VIDEOS_USER_ID_USERS_USER_I FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE VIDEOS ADD CONSTRAINT FK_VIDEOS_NOTE_ID_NOTE_CATEGOR FOREIGN KEY (NOTE_ID) REFERENCES NOTE_CATEGORIES (NOTE_ID);
ALTER TABLE BOARDS ADD CONSTRAINT FK_BOARDS_USER_ID_USERS_USER_I FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE KEYWORDS ADD CONSTRAINT FK_KEYWORDS_USER_ID_USERS_USER FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE KEYWORDS ADD CONSTRAINT FK_KEYWORDS_VIDEO_ID_VIDEOS_VI FOREIGN KEY (VIDEO_ID) REFERENCES VIDEOS (VIDEO_ID);
ALTER TABLE VIDEO_ANALYSES ADD CONSTRAINT FK_VIDEO_ANALYSES_USER_ID_USER FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE VIDEO_ANALYSES ADD CONSTRAINT FK_VIDEO_ANALYSES_VIDEO_ID_VID FOREIGN KEY (VIDEO_ID) REFERENCES VIDEOS (VIDEO_ID);
ALTER TABLE CALENDARS ADD CONSTRAINT FK_CALENDARS_USER_ID_USERS_USE FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);

--TRIGGER 생성
CREATE OR REPLACE TRIGGER NOTE_CATEGORIES_AI_TRG 
BEFORE INSERT ON NOTE_CATEGORIES 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT NOTE_CATEGORIES_SEQ.NEXTVAL
    INTO :NEW.NOTE_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER VIDEOS_AI_TRG
BEFORE INSERT ON VIDEOS 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT VIDEOS_SEQ.NEXTVAL
    INTO :NEW.VIDEO_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER BOARDS_AI_TRG
BEFORE INSERT ON BOARDS 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BOARDS_SEQ.NEXTVAL
    INTO :NEW.ARTICLE_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER KEYWORDS_AI_TRG
BEFORE INSERT ON KEYWORDS 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT KEYWORDS_SEQ.NEXTVAL
    INTO :NEW.KEYWORD_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER VIDEO_ANALYSES_AI_TRG
BEFORE INSERT ON VIDEO_ANALYSES 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT VIDEO_ANALYSES_SEQ.NEXTVAL
    INTO :NEW.ANALYSIS_ID
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER CALENDARS_AI_TRG
BEFORE INSERT ON CALENDARS 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT CALENDARS_SEQ.NEXTVAL
    INTO :NEW.CAL_ID
    FROM DUAL;
END;
ALTER TABLE USERS RENAME COLUMN MEMBERSHIP_ID TO MEMBERSHIP_NAME;
UPDATE USERS SET MEMBERSHIP_NAME = 'Basic';


SELECT* FROM USERS;
SELECT* FROM BOARDS;
SELECT* FROM CALENDARS;